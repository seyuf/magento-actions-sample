<?php

// @codingStandardsIgnoreFile

// File overvritten to make sorting direction options a part of the select options.

/** @var \Aheadworks\Pquestion\Block\Question\Sort $this */
?>
<div class="aw-pq-question-sort-block field">
    <label class="aw-pq-question-sort__sortby-label">
        <?php echo $this->escapeHtml(__('Sort by:')) ?>
    </label>
    <select class="select aw-pq-question-sort__sortby">
        <?php foreach ($this->getOptions() as $value => $label): ?>
            <option
                value="<?php echo $this->escapeHtml($value); ?>/ASC"
                <?php if ($this->getCurrentOrder() == $value && $this->getCurrentDir() == "ASC"): ?> selected<?php endif ?>
            >
                <?php echo $this->escapeHtml($label); ?> - <?= __('Ascending'); ?>
            </option>

            <option
                value="<?php echo $this->escapeHtml($value); ?>/DESC"
                <?php if ($this->getCurrentOrder() == $value && $this->getCurrentDir() == "DESC"): ?> selected<?php endif ?>
            >
                <?php echo $this->escapeHtml($label); ?> - <?= __('Descending'); ?>
            </option>
        <?php endforeach ?>
    </select>
    <div class="aw-pq-question-sort__dir"></div>
</div>
<script type="text/javascript">
    require([
        'AWPquestionSorter', 'jquery'
    ], function(sorter, $) {
        var config = {
            'sortBlockSelector': '.aw-pq-question-sort-block',
            'sortbySelector': '.aw-pq-question-sort__sortby',
            'dirSelector': '.aw-pq-question-sort__dir',
            'updateContainerSelector': '.aw-pq-question-list-wrapper',
            'sortUrl': <?php /* @noEscape */ echo $this->getSortUrl(); ?>,
            'sortDirValue': <?php /* @noEscape */ echo \Zend_Json::encode($this->getCurrentDir()); ?>,
            'sortDirValueTarget': <?php /* @noEscape */ echo $this->getTargetDir(); ?>,
            'sortByValue': <?php /* @noEscape */ echo \Zend_Json::encode($this->getCurrentOrder()); ?>,
            'dirImagesUrl': <?php /* @noEscape */ echo $this->getImages(); ?>,
            'overlayCssClass': 'aw-pq-overlay',
            'overlayImage': <?php /* @noEscape */ echo $this->getOverlayImage(); ?>,
            'overlayContainerSelector': '.aw-pq-list.box-content',
            'product': <?php /* @noEscape */ echo $this->getProduct(); ?>,
            'formKey': '<?php /* @noEscape */ echo $this->getSessionFormKey(); ?>'
        };

        window.AWPqSorter.prototype.initObservers = function () {
            var me = this;

            Event.observe(this.sortby, 'change', function (e) {
                const splitValue = me.sortby.value.split('/');
                const sortBy = splitValue[0];
                const sortDir = splitValue[1];

                if (!me.disabled) {
                    me.sortByValue = sortBy;
                    me.sortDirValue = sortDir;
                    me._dispatch();
                }
            });
        }

        new AWPqSorter(config);
    });
</script>
