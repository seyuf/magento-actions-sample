<?php

$webFonts = $block->getWebFonts();
$localFonts = $block->getLocalFonts();

if (!empty($webFonts)):
    /**
     * Loop through all web fonts defined in XML
     */
    foreach ($webFonts as $url):
        if (!empty($url)): ?>
            <link rel="preload" href="<?= $url ?>" as="style" onload="this.onload=null;this.rel='stylesheet'" crossorigin>
            <noscript><link rel="stylesheet" href="<?= $url ?>"></noscript>
            <?php if (strpos($url, 'fonts.googleapis') !== false): ?>
                <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin>
            <?php endif;
        endif;
    endforeach;
endif;

if (!empty($localFonts)):
    /**
     * Loop through all local fonts defined in XML
     */
    foreach ($localFonts as $url):
        if (!empty($url)):
            $localFontUrl = $this->getViewFileUrl($url); ?>
            <link rel="preload" href="<?= $localFontUrl ?>" as="style" onload="this.onload=null;this.rel='stylesheet'">
            <noscript><link rel="stylesheet" href="<?= $localFontUrl ?>"></noscript>
        <?php endif;
    endforeach;
endif;

if (!empty($webFonts) || !empty($localFonts)): ?>
    <script>
        /*! loadCSS. [c]2017 Filament Group, Inc. MIT License */
        /* This file is meant as a standalone workflow for
        - testing support for link[rel=preload]
        - enabling async CSS loading in browsers that do not support rel=preload
        - applying rel preload css once loaded, whether supported or not.
        */
        !function(t){"use strict";t.loadCSS||(t.loadCSS=function(){});var e=loadCSS.relpreload={};if(e.support=function(){var e;try{e=t.document.createElement("link").relList.supports("preload")}catch(t){e=!1}return function(){return e}}(),e.bindMediaToggle=function(t){var e=t.media||"all";function a(){t.media=e}t.addEventListener?t.addEventListener("load",a):t.attachEvent&&t.attachEvent("onload",a),setTimeout(function(){t.rel="stylesheet",t.media="only x"}),setTimeout(a,3e3)},e.poly=function(){if(!e.support())for(var a=t.document.getElementsByTagName("link"),n=0;n<a.length;n++){var o=a[n];"preload"!==o.rel||"style"!==o.getAttribute("as")||o.getAttribute("data-loadcss")||(o.setAttribute("data-loadcss",!0),e.bindMediaToggle(o))}},!e.support()){e.poly();var a=t.setInterval(e.poly,500);t.addEventListener?t.addEventListener("load",function(){e.poly(),t.clearInterval(a)}):t.attachEvent&&t.attachEvent("onload",function(){e.poly(),t.clearInterval(a)})}"undefined"!=typeof exports?exports.loadCSS=loadCSS:t.loadCSS=loadCSS}("undefined"!=typeof global?global:this);
    </script>
<?php endif; ?>
